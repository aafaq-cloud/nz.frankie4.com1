<div data-autoload-class="CollectionSection" class="section section-collection no-margin-top">



  <div class="grid-container">

    <div class="grid-x grid-padding-x grid-margin-y align-center">
      <div class="small-12 medium-12 large-7 cell">

        <div class="collection-description">
          <h1 class="h2">{{collection.title}}</h1>
          {%  if collection.description != '' %}
            <p class="color-secondary-text">{{collection.description}}</p>
          {%  endif %}

        </div>

        <!-- Filter Desktop -->
        <div id="bc-sf-filter-tree-h"></div>
        <div class="bc-sf-filter-toolbar-item bc-sf-filter-toolbar-count">
          <span id="bc-sf-filter-total-product"></span>
        </div>

      </div>
    </div>

     <div class="grid-x grid-padding-x grid-margin-y">

        <div class="small-12 medium-12 large-12 cell">

          <div class="bc-sf-filter-mobile">
            <div id="bc-sf-filter-tree-mobile"></div>
            <div id="bc-sf-filter-tree"></div>
          </div>

            <!-- Sorting -->
            <div class="collection-toolbar">
              <div class="cell auto grid-x grid-margin-x align-middle align-justify">
                <div class="collection-toolbar__sort cell shrink flex-container align-middle">
                  <div id="bc-sf-filter-top-sorting"></div>
               </div>
              </div>
            </div>

            <!-- Listing -->

            <div id="bc-sf-filter-products" class="collection-products grid-x grid-margin-x grid-margin-y"
            data-primary="{% if collection.metafields.products.primary != blank %}true{% else %}false{% endif %}"
            data-load_more_enable="{% if section.settings.plus_load_more_enabled and paginate.pages > 1 %}true{% else %}false{% endif %}">
              {% for product in collection.products %}
                <div class="cell small-6 large-3 grid-x align-stretch">

                </div>
              {% endfor %}
            </div>


            <div id="bc-sf-filter-bottom-pagination"></div>
            <div id="bc-sf-filter-load-more"></div>


         </div>

     </div>


   </div>



</div>

<script>
    // Declare bcSfFilterConfig variable
    var bcSfFilterConfig = {
        label: {
            sorting: {% assign temp = 'collections.sorting.title' | t  %} {% unless temp contains 'translation missing'  %} {{ temp | json }} {% else %} "Sorting" {% endunless %},
            sorting_best_selling: {% assign temp = collection.sort_options[1].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Best Selling" {% endunless %},
            sorting_featured: {% assign temp = collection.sort_options[0].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Featured" {% endunless %},
            sorting_title_ascending: {% assign temp = collection.sort_options[2].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Alphabetically, A-Z" {% endunless %},
            sorting_title_descending: {% assign temp = collection.sort_options[3].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Alphabetically, Z-A" {% endunless %},
            sorting_price_ascending: {% assign temp = collection.sort_options[4].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Lowest Price" {% endunless %},
            sorting_price_descending: {% assign temp = collection.sort_options[5].name %} {% unless temp == nil %} {{ temp | json }} {% else %} "Highest Price" {% endunless %},
            sorting_date_ascending: {% assign temp = collection.sort_options[6].name %} {% unless temp == nil  %} {{ temp | json }} {% else %} "Date, Old to New" {% endunless %},
            sorting_date_descending: {% assign temp = collection.sort_options[7].name %} {% unless temp == nil  %} {{ temp | json }} {% else %} "Date, New to Old" {% endunless %},
            sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing'  %} {{ temp | json }} {% else %} "Relevance" {% endunless %},

            sale: {{ 'products.product.on_sale' | t | json }},
            sale_price: {{ 'products.product.sale_price' | t | json }},
            sold_out: {{ 'products.product.sold_out' | t | json }},
            vendor: {{ 'products.product.vendor' | t |json }},
            regular_price: {{ 'products.product.regular_price' | t | json }},
            items_with_count_one: "product",
            items_with_count_other: "Products",
            current_page: {{ 'general.pagination.current_page' | t | json }},
        },
        custom: {
            // Add custom value here
        }
    };
</script>

{% stylesheet "scss" %}
.collection-banner-image-wrapper {
  background-color: darken(white, 5);
  position: relative;
  @supports (object-fit: cover) {
    padding-bottom: (367 / 690) * 100%;
  }
}
.collection-banner-image {
  width: 100%;
  display: block;
  transition: opacity 0.35s;
  @supports (object-fit: cover) {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    object-fit: cover;
  }
  &.lazyload {
    opacity: 0;
  }
  &.lazyloaded {
    opacity: 1;
  }
}
{% endstylesheet %}
{% schema %}
{
  "name": "Collection",
  "settings": [
    {
        "type": "header",
        "content": "Banner Overlay"
    },
    {
        "type": "checkbox",
        "id": "overlay_enable",
        "label": "Enable banner overlay"
    },
    {
      "type": "header",
      "content": "Collection infinite scroll"
    },
    {
      "type": "paragraph",
      "content": "Replace default collection pagination with a 'lazy load' ajax functionality which loads subsequent product pages as you scroll down."
    },
    {
      "type": "checkbox",
      "id": "plus_load_more_enabled",
      "label": "Enable ajax collection pagination",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "marketing_block",
      "name": "Image Block",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "position",
          "label": "Position",
          "min": 1,
          "max": 8,
          "step": 1,
          "default": 4
        },
        {
          "type": "text",
          "id": "scope",
          "label": "Collections to show on",
          "default": "all",
          "info": "Comma separate multiple collection slugs, or use 'all' to show on every collection"
        }
      ]
    }
  ]
}
{% endschema %}
