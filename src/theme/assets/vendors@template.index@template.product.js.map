{"version":3,"sources":["webpack:///../node_modules/@shopify/theme-sections/dist/sections.cjs.js","webpack:///../node_modules/lodash-es/_cloneBuffer.js","webpack:///../node_modules/lodash-es/_arrayEach.js","webpack:///../node_modules/lodash-es/_defineProperty.js","webpack:///../node_modules/lodash-es/_baseAssignValue.js","webpack:///../node_modules/lodash-es/_assignValue.js","webpack:///../node_modules/lodash-es/_copyObject.js","webpack:///../node_modules/lodash-es/_baseAssign.js","webpack:///../node_modules/lodash-es/_baseKeysIn.js","webpack:///../node_modules/lodash-es/_nativeKeysIn.js","webpack:///../node_modules/lodash-es/keysIn.js","webpack:///../node_modules/lodash-es/_baseAssignIn.js","webpack:///../node_modules/lodash-es/_copyArray.js","webpack:///../node_modules/lodash-es/_copySymbols.js","webpack:///../node_modules/lodash-es/_getPrototype.js","webpack:///../node_modules/lodash-es/_getSymbolsIn.js","webpack:///../node_modules/lodash-es/_copySymbolsIn.js","webpack:///../node_modules/lodash-es/_getAllKeysIn.js","webpack:///../node_modules/lodash-es/_initCloneArray.js","webpack:///../node_modules/lodash-es/_cloneArrayBuffer.js","webpack:///../node_modules/lodash-es/_cloneRegExp.js","webpack:///../node_modules/lodash-es/_cloneSymbol.js","webpack:///../node_modules/lodash-es/_initCloneByTag.js","webpack:///../node_modules/lodash-es/_cloneDataView.js","webpack:///../node_modules/lodash-es/_cloneTypedArray.js","webpack:///../node_modules/lodash-es/_baseCreate.js","webpack:///../node_modules/lodash-es/_initCloneObject.js","webpack:///../node_modules/lodash-es/_baseIsMap.js","webpack:///../node_modules/lodash-es/isMap.js","webpack:///../node_modules/lodash-es/isSet.js","webpack:///../node_modules/lodash-es/_baseIsSet.js","webpack:///../node_modules/lodash-es/_baseClone.js","webpack:///../node_modules/lodash-es/isPlainObject.js","webpack:///../node_modules/lodash-es/_customOmitClone.js","webpack:///../node_modules/lodash-es/_isFlattenable.js","webpack:///../node_modules/lodash-es/flatten.js","webpack:///../node_modules/lodash-es/_baseFlatten.js","webpack:///../node_modules/lodash-es/_overRest.js","webpack:///../node_modules/lodash-es/constant.js","webpack:///../node_modules/lodash-es/_baseSetToString.js","webpack:///../node_modules/lodash-es/_shortOut.js","webpack:///../node_modules/lodash-es/_setToString.js","webpack:///../node_modules/lodash-es/omit.js","webpack:///../node_modules/lodash-es/_flatRest.js","webpack:///../node_modules/lodash-es/_apply.js","webpack:///../node_modules/lodash-es/_baseFor.js","webpack:///../node_modules/lodash-es/_createBaseFor.js","webpack:///../node_modules/lodash-es/_baseForOwn.js","webpack:///../node_modules/lodash-es/_baseEach.js","webpack:///../node_modules/lodash-es/_createBaseEach.js","webpack:///../node_modules/lodash-es/_baseFilter.js","webpack:///../node_modules/lodash-es/filter.js","webpack:///../node_modules/lodash-es/_basePullAt.js","webpack:///../node_modules/lodash-es/remove.js","webpack:///../node_modules/lodash-es/last.js","webpack:///../node_modules/lodash-es/_parent.js","webpack:///../node_modules/lodash-es/_baseSlice.js","webpack:///../node_modules/lodash-es/_baseUnset.js"],"names":["Object","defineProperty","exports","value","_toConsumableArray3","_interopRequireDefault","__webpack_require__","_typeof3","_jquery2","_omit2","_remove2","_find2","_filter2","obj","__esModule","default","Sections","_this","this","$document","document","namespace","addEventListener","evt","id","detail","sectionId","container","target","querySelector","type","getAttribute","load","Master","data","$container","extensions","$eventBinder","_this5","forEach","extension","extend","call","on","event","trigger","off","window","__sections__","instances","bind","onLoad","onUnload","onSelect","onDeselect","onBlockSelect","onBlockDeselect","prototype","registered","*","register","properties","Section","constructor","create","types","containers","_this2","_normalizeTypeParam","_normalizeContainersParam","selection","querySelectorAll","Array","slice","_instanceExists","concat","instance","push","_this3","isInstance","getInstances","_this4","Deferred","defer","length","reject","resolve","args","arguments","apply","triggerArgs","_sectionTrigger","keys","map","toLowerCase","isArray","one","splice","init","isFunction","self","$window","freeExports","nodeType","freeModule","module","Buffer","_root_js__WEBPACK_IMPORTED_MODULE_0__","a","allocUnsafe","__webpack_exports__","buffer","isDeep","result","copy","array","_defineProperty","func","_getNative","e","_baseAssignValue","object","key","configurable","enumerable","writable","_assignValue_hasOwnProperty","hasOwnProperty","_assignValue","objValue","eq","_copyObject","source","props","customizer","isNew","index","newValue","undefined","_baseAssign","_baseKeysIn_hasOwnProperty","_baseKeysIn","isObject","_nativeKeysIn","isProto","_isPrototype","lodash_es_keysIn","isArrayLike","_arrayLikeKeys","_baseAssignIn","_copySymbols","_getSymbols","_getPrototype","_overArg","getPrototypeOf","_getSymbolsIn","getOwnPropertySymbols","_arrayPush","stubArray","_copySymbolsIn","_getAllKeysIn","_baseGetAllKeys","_initCloneArray_hasOwnProperty","_cloneArrayBuffer","arrayBuffer","byteLength","_Uint8Array","set","reFlags","symbolProto","_Symbol","symbolValueOf","valueOf","_initCloneByTag","tag","Ctor","dataView","byteOffset","_cloneDataView","typedArray","_cloneTypedArray","regexp","exec","lastIndex","_cloneRegExp","symbol","_cloneSymbol","objectCreate","_baseCreate","proto","_initCloneObject","_baseIsMap_mapTag","nodeIsMap","_nodeUtil","isMap","lodash_es_isMap","_baseUnary","isObjectLike","_getTag","nodeIsSet","isSet","lodash_es_isSet","argsTag","funcTag","objectTag","cloneableTags","_baseClone","baseClone","bitmask","stack","isFlat","isFull","isArr","input","_initCloneArray","_copyArray","isFunc","isBuffer","_cloneBuffer","_Stack","stacked","get","subValue","add","keysFunc","_getAllKeys","keysIn","iteratee","_arrayEach","funcProto","Function","isPlainObject_objectProto","funcToString","toString","isPlainObject_hasOwnProperty","objectCtorString","_customOmitClone","_baseGetTag","lodash_es_isPlainObject","spreadableSymbol","isConcatSpreadable","_isFlattenable","isArguments","lodash_es_flatten","baseFlatten","depth","predicate","isStrict","_baseFlatten","nativeMax","Math","max","_baseSetToString","string","lodash_es_constant","identity","nativeNow","Date","now","_setToString","count","lastCalled","stamp","remaining","omit","start","transform","otherArgs","thisArg","_apply","_overRest","paths","_arrayMap","path","_castPath","omit_CLONE_DEEP_FLAG","_baseUnset","he","264","t","n","r","_baseFor","iterable","_createBaseFor","_baseEach","eachFunc","fromRight","collection","_arrayFilter","_baseIteratee","265","i","o","_basePullAt","indexes","previous","_isIndex","_parent","_baseGet","end","_baseSlice","s","_toKey","lodash_es_last"],"mappings":"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","file":"vendors@template.index@template.product.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _jquery = require(\"jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _omit = require(\"lodash-es/omit\");\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _remove = require(\"lodash-es/remove\");\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nvar _find = require(\"lodash-es/find\");\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _filter = require(\"lodash-es/filter\");\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Sections() {\n  var _this = this;\n\n  this.$document = (0, _jquery2.default)(document);\n  this.namespace = \".section-js-events\";\n\n  document.addEventListener(\"shopify:section:load\", function (evt) {\n    var id = evt.detail.sectionId;\n    var container = evt.target.querySelector(\"[data-section-id=\\\"\" + id + \"\\\"]\");\n    var type = container.getAttribute(\"data-section-type\");\n\n    _this.load(type, container);\n  });\n}\n\n_jquery2.default.extend(Sections.prototype, {\n  /**\n   * Indexed list of all registered section types\n   */\n  registered: {},\n\n  /**\n   * List of all section instances\n   */\n  instances: [],\n\n  /**\n   * Indexed list of all registered global extensions\n   */\n  extensions: {\n    \"*\": []\n  },\n\n  /**\n   * Registers a section type with properties. Adds a new section constructor to\n   * the registered list of sections.\n   *\n   * @param {string} type\n   * @param {object} properties\n   */\n  register: function register(type, properties) {\n    function Section(data) {\n      this.type = type;\n      Master.call(this, data);\n    }\n\n    Section.constructor = this.registered[type];\n    Section.prototype = Object.create(Master.prototype);\n    _jquery2.default.extend(Section.prototype, properties);\n\n    this.registered[type] = Section;\n  },\n\n\n  /**\n   * Loads all or the specified section types\n   */\n  load: function load(types, containers) {\n    var _this2 = this;\n\n    types = this._normalizeTypeParam(types);\n    containers = this._normalizeContainersParam(containers);\n\n    types.forEach(function (type) {\n      var Section = _this2.registered[type];\n      var selection = containers;\n\n      if (typeof Section === \"undefined\") {\n        return;\n      }\n\n      if (typeof selection === \"undefined\") {\n        selection = document.querySelectorAll(\"[data-section-type=\\\"\" + type + \"\\\"]\");\n      }\n\n      // Convert selection NodeList into an array\n      selection = Array.prototype.slice.call(selection);\n\n      selection.forEach(function (container) {\n        if (_this2._instanceExists(container)) {\n          return;\n        }\n\n        var extensions = _this2.extensions[\"*\"].concat(_this2.extensions[type] || []);\n        var instance = new Section({\n          container: container,\n          extensions: extensions,\n          id: container.getAttribute(\"data-section-id\")\n        });\n\n        instance.trigger(\"section_load\");\n\n        _this2.instances.push(instance);\n      });\n    });\n  },\n\n\n  /**\n   * Extend single, multiple, or all sections with additional functionality.\n   */\n  extend: function extend(types, extension) {\n    var _this3 = this;\n\n    types = this._normalizeTypeParam(types);\n\n    types.forEach(function (type) {\n      _this3.extensions[type] = _this3.extensions[type] || [];\n      _this3.extensions[type].push(extension);\n\n      if (typeof _this3.registered[type] === \"undefined\") {\n        return;\n      }\n\n      _this3.instances.forEach(function (instance) {\n        if (instance.type !== type) {\n          return;\n        }\n        instance.extend(extension);\n      });\n    });\n  },\n\n\n  /**\n   * Checks if a particular section type has been loaded on the page.\n   */\n  isInstance: function isInstance(type) {\n    return (0, _typeof3.default)((0, _find2.default)(this.instances, { type: type })) === \"object\";\n  },\n\n\n  /**\n   * Returns all instances of a section type on the page.\n   */\n  getInstances: function getInstances(type) {\n    var _this4 = this;\n\n    return _jquery2.default.Deferred(function (defer) {\n      var instances = (0, _filter2.default)(_this4.instances, { type: type });\n\n      if (instances.length === 0) {\n        defer.reject();\n      } else {\n        defer.resolve(instances);\n      }\n    });\n  },\n\n\n  /**\n   * Attaches an event handler to the document that is fired whenever any section\n   * instance triggers an event of specified type. Automatically adds a namespace\n   * for easy removal with `sections.off('event')`\n   */\n  on: function on() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Apply the section namespace to any event handler created by this section\n    args[0] = args[0].concat(this.namespace);\n\n    this.$document.on.apply(this.$document, args);\n  },\n\n\n  /**\n   * Removes an event handler attached using `sections.on()`.\n   */\n  off: function off() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Apply the section namespace to any event handler created by this section\n    args[0] = args[0].concat(this.namespace);\n\n    this.$document.off.apply(this.$document, arguments);\n  },\n\n\n  /**\n   * Triggers and event in every section instance\n   */\n  trigger: function trigger() {\n    var triggerArgs = arguments;\n    this.instances.forEach(function (instance) {\n      instance.trigger.apply(instance, (0, _toConsumableArray3.default)(triggerArgs));\n    });\n  },\n  _sectionTrigger: function _sectionTrigger() {\n    this.$document.trigger.apply(this.$document, arguments);\n  },\n  _normalizeTypeParam: function _normalizeTypeParam(types) {\n    if (types === \"*\") {\n      types = Object.keys(this.registered);\n    } else if (typeof types === \"string\") {\n      types = [types];\n    }\n\n    types = types.map(function (type) {\n      return type.toLowerCase();\n    });\n\n    return types;\n  },\n  _normalizeContainersParam: function _normalizeContainersParam(containers) {\n    if (!Array.isArray(containers) && (typeof containers === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(containers)) === \"object\") {\n      // If a single container object is specified not inside a function\n      containers = [containers];\n    }\n    return containers;\n  },\n  _instanceExists: function _instanceExists(container) {\n    var instance = (0, _find2.default)(this.instances, {\n      id: container.getAttribute(\"data-section-id\")\n    });\n    return typeof instance !== \"undefined\";\n  }\n});\n\nwindow.__sections__ = window.__sections__ || new Sections();\nexports.default = window.__sections__;\n\n/**\n * Master section class that all sections inherit from\n * @constructor\n *\n */\n\nfunction Master(data) {\n  this.container = data.container;\n  this.$container = (0, _jquery2.default)(this.container);\n  this.id = data.id;\n  this.namespace = \".\" + data.id;\n  this.extensions = data.extensions || [];\n  this.$eventBinder = this.$container;\n\n  _applyExtensions.call(this);\n  _applyEditorHandlers.call(this);\n  _applyDefaultHandlers.call(this);\n}\n\nMaster.prototype = {\n  /* eslint-disable no-empty-function */\n  onLoad: function onLoad() {},\n  onUnload: function onUnload() {},\n  onSelect: function onSelect() {},\n  onDeselect: function onDeselect() {},\n  onBlockSelect: function onBlockSelect() {},\n  onBlockDeselect: function onBlockDeselect() {},\n\n\n  /* eslint-enable no-empty-function */\n\n  /**\n   * Attaches an event handler to an instance of a section. Only listens to\n   * events triggered by that section instance.\n   */\n  on: function on() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Apply the section namespace to any event handler created by this section\n    args[0] = args[0].concat(this.namespace);\n\n    this.$eventBinder.on.apply(this.$eventBinder, args);\n    this.$eventBinder = this.$container;\n  },\n\n\n  /**\n   * Attaches an event handler to an instance of a section that is removed after\n   * being called once. Only listens to events triggered by that section instance.\n   */\n  one: function one() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Apply the section namespace to any event handler created by this section\n    args[0] = args[0].concat(this.namespace);\n\n    this.$eventBinder.one.apply(this.$eventBinder, args);\n    this.$eventBinder = this.$container;\n  },\n\n\n  /**\n   * Removes an event handler that was attached using the `this.on()` method\n   */\n  off: function off() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Apply the section namespace to any event handler created by this section\n    args[0] = args[0] || \"\";\n    args[0] = args[0].concat(this.namespace);\n\n    this.$eventBinder.off.apply(this.$eventBinder, arguments);\n    this.$eventBinder = this.$container;\n  },\n\n\n  /*\n  * Triggers an event on both this section instance and the sections object so\n  * so that any event handlers attached using `sections.on()` will be also\n  * triggered.\n  */\n  trigger: function trigger() {\n    // Convert arguments object into an array\n    var args = Array.prototype.slice.call(arguments);\n\n    // Check what the second argument is. If there is already an array keep it.\n    args[1] = args[1] || [];\n\n    // Add the section instance as the first item in the array. This will force\n    // it to be the first param in the .on() callback\n    args[1].splice(0, 0, this);\n\n    this.$eventBinder.trigger.apply(this.$eventBinder, args);\n    this.$eventBinder = this.$container;\n  },\n\n\n  /**\n   * Extends this section instance with additional functionality.\n   */\n  extend: function extend(extension) {\n    var init = extension.init;\n    this.extensions.push(extension);\n\n    _jquery2.default.extend(this, (0, _omit2.default)(extension, \"init\"));\n\n    if (_jquery2.default.isFunction(init)) {\n      init.apply(this);\n    }\n  }\n};\n\n/**\n * Shortcut methods that are automatically namespaced for easy removal, e.g.\n * $(document).on('event' + this.namespace);\n */\nMaster.prototype.document = function () {\n  var $document = (0, _jquery2.default)(document);\n  var self = this;\n  return {\n    on: function on() {\n      self.$eventBinder = $document;\n      self.on.apply(self, arguments);\n    },\n    off: function off() {\n      self.$eventBinder = $document;\n      self.off.apply(self, arguments);\n    },\n    trigger: function trigger() {\n      self.$eventBinder = $document;\n      self.trigger.apply(self, arguments);\n    }\n  };\n};\n\n/**\n * Shortcut methods that are automatically namespaced for easy removal, e.g.\n * $(window).on('event' + this.namespace);\n */\nMaster.prototype.window = function () {\n  var $window = (0, _jquery2.default)(window);\n  var self = this;\n  return {\n    on: function on() {\n      self.$eventBinder = $window;\n      self.on.apply(self, arguments);\n    },\n    off: function off() {\n      self.$eventBinder = $window;\n      self.off.apply(self, arguments);\n    },\n    trigger: function trigger() {\n      self.$eventBinder = $window;\n      self.trigger.apply(self, arguments);\n    }\n  };\n};\n\nfunction _applyExtensions() {\n  var _this5 = this;\n\n  this.extensions.forEach(function (extension) {\n    _this5.extend(extension);\n  });\n}\n\nfunction _applyEditorHandlers() {\n  (0, _jquery2.default)(document).on(\"shopify:section:unload\" + this.namespace, _onSectionUnload.bind(this)).on(\"shopify:section:select\" + this.namespace, _onSelect.bind(this)).on(\"shopify:section:deselect\" + this.namespace, _onDeselect.bind(this)).on(\"shopify:block:select\" + this.namespace, _onBlockSelect.bind(this)).on(\"shopify:block:deselect\" + this.namespace, _onBlockDeselect.bind(this));\n}\n\nfunction _applyDefaultHandlers() {\n  this.on(\"section_load\", this.onLoad.bind(this));\n  this.on(\"section_unload\", this.onUnload.bind(this));\n  this.on(\"section_select\", this.onSelect.bind(this));\n  this.on(\"section_deselect\", this.onDeselect.bind(this));\n  this.on(\"block_select\", this.onBlockSelect.bind(this));\n  this.on(\"block_deselect\", this.onBlockDeselect.bind(this));\n}\n\nfunction _onSectionUnload(event) {\n  if (this.id !== event.detail.sectionId) {\n    return;\n  }\n\n  event.type = \"section_unload\";\n  this.trigger(event);\n\n  this.off(this.namespace);\n  window.__sections__.off(this.namespace);\n  (0, _jquery2.default)(document).off(this.namespace);\n  (0, _jquery2.default)(window).off(this.namespace);\n\n  (0, _remove2.default)(window.__sections__.instances, { id: this.id });\n}\n\nfunction _onSelect(event) {\n  if (this.id !== event.detail.sectionId) {\n    return;\n  }\n\n  event.type = \"section_select\";\n  this.trigger(event);\n}\n\nfunction _onDeselect(event) {\n  if (this.id !== event.detail.sectionId) {\n    return;\n  }\n\n  event.type = \"section_deselect\";\n  this.trigger(event);\n}\n\nfunction _onBlockSelect(event) {\n  if (this.id !== event.detail.sectionId) {\n    return;\n  }\n\n  event.type = \"block_select\";\n  this.trigger(event);\n}\n\nfunction _onBlockDeselect(event) {\n  if (this.id !== event.detail.sectionId) {\n    return;\n  }\n\n  event.type = \"block_deselect\";\n  this.trigger(event);\n}\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n\n    return result;\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n","import baseIteratee from './_baseIteratee.js';\nimport basePullAt from './_basePullAt.js';\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n"],"sourceRoot":""}